@model WebBanHang.Models.Order

@{
    ViewData["Title"] = $"Chi tiết đơn hàng #{Model.Id}";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Enhanced Header -->
<div class="order-details-header">
    <div class="container-fluid">
        <div class="row align-items-center py-4">
            <div class="col-md-8">
                <div class="header-content">
                    <div class="order-icon">
                        <i class="fas fa-file-invoice-dollar"></i>
                    </div>
                    <div class="order-title-section">
                        <h1 class="order-title">Đơn hàng #ORD-@Model.Id.ToString("D6")</h1>
                        <div class="order-meta">
                            <span class="order-date">
                                <i class="fas fa-calendar-alt me-2"></i>
                                @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")
                            </span>
                            <span class="order-status status-processing">
                                <i class="fas fa-clock me-2"></i>
                                Đang xử lý
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 text-end">
                <div class="header-actions">
                    <button class="btn btn-print" onclick="window.print()">
                        <i class="fas fa-print me-2"></i>In
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-back">
                        <i class="fas fa-arrow-left me-2"></i>Quay lại
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="content-wrapper order-details-content">    <!-- Main Content Grid -->
    <section class="order-details-section">
        <div class="container-fluid">
            <div class="row g-4">
                <!-- Left Column - Order Details -->
                <div class="col-xl-8 col-lg-7">
                    <!-- Order Summary Card -->
                    <div class="details-card order-summary-card">
                        <div class="card-header">
                            <div class="header-icon">
                                <i class="fas fa-receipt"></i>
                            </div>
                            <div class="header-text">
                                <h3 class="card-title">Tóm tắt đơn hàng</h3>
                                <p class="card-subtitle">Thông tin tổng quan về đơn hàng</p>
                            </div>
                            <div class="header-badge">
                                <span class="status-badge status-processing">
                                    <i class="fas fa-clock"></i>
                                    Đang xử lý
                                </span>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="summary-grid">
                                <div class="summary-item">
                                    <div class="summary-icon bg-primary">
                                        <i class="fas fa-hashtag"></i>
                                    </div>
                                    <div class="summary-info">
                                        <span class="summary-label">Mã đơn hàng</span>
                                        <span class="summary-value">#ORD-@Model.Id.ToString("D6")</span>
                                    </div>
                                </div>
                                <div class="summary-item">
                                    <div class="summary-icon bg-success">
                                        <i class="fas fa-coins"></i>
                                    </div>
                                    <div class="summary-info">
                                        <span class="summary-label">Tổng tiền</span>
                                        <span class="summary-value price">@Model.TotalPrice.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</span>
                                    </div>
                                </div>
                                <div class="summary-item">
                                    <div class="summary-icon bg-info">
                                        <i class="fas fa-boxes"></i>
                                    </div>
                                    <div class="summary-info">
                                        <span class="summary-label">Số sản phẩm</span>
                                        <span class="summary-value">@Model.OrderDetails.Sum(od => od.Quantity)</span>
                                    </div>
                                </div>
                                <div class="summary-item">
                                    <div class="summary-icon bg-warning">
                                        <i class="fas fa-layer-group"></i>
                                    </div>
                                    <div class="summary-info">
                                        <span class="summary-label">Mặt hàng</span>
                                        <span class="summary-value">@Model.OrderDetails.Count()</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Products Card -->
                    <div class="details-card products-card">
                        <div class="card-header">
                            <div class="header-icon">
                                <i class="fas fa-shopping-bag"></i>
                            </div>
                            <div class="header-text">
                                <h3 class="card-title">Sản phẩm đã đặt</h3>
                                <p class="card-subtitle">Chi tiết từng sản phẩm trong đơn hàng</p>
                            </div>
                        </div>
                        <div class="card-content p-0">
                            <div class="products-list">
                                @foreach (var detail in Model.OrderDetails)
                                {
                                    <div class="product-item" data-aos="fade-up">
                                        <div class="product-image-container">
                                            @if (!string.IsNullOrEmpty(detail.Product?.ImageUrl))
                                            {
                                                <img src="@detail.Product.ImageUrl" alt="@detail.Product?.Name" class="product-image">
                                            }
                                            else
                                            {
                                                <div class="product-placeholder">
                                                    <i class="fas fa-image"></i>
                                                </div>
                                            }
                                        </div>
                                        <div class="product-details">
                                            <h4 class="product-name">@detail.Product?.Name</h4>
                                            <p class="product-category">@detail.Product?.Category?.Name</p>
                                            <div class="product-meta">
                                                <span class="product-price">@detail.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</span>
                                                <span class="product-separator">×</span>
                                                <span class="product-quantity">@detail.Quantity</span>
                                            </div>
                                        </div>
                                        <div class="product-total">
                                            <span class="total-amount">@((detail.Price * detail.Quantity).ToString("C0", new System.Globalization.CultureInfo("vi-VN")))</span>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="products-footer">
                                <div class="total-section">
                                    <span class="total-label">Tổng cộng:</span>
                                    <span class="total-value">@Model.TotalPrice.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Right Column - Customer & Actions -->
                <div class="col-xl-4 col-lg-5">
                    <!-- Customer Info Card -->
                    <div class="details-card customer-card">
                        <div class="card-header">
                            <div class="header-icon">
                                <i class="fas fa-user-circle"></i>
                            </div>
                            <div class="header-text">
                                <h3 class="card-title">Khách hàng</h3>
                                <p class="card-subtitle">Thông tin người đặt hàng</p>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="customer-profile">
                                <div class="customer-avatar">
                                    <div class="avatar-circle">
                                        <i class="fas fa-user"></i>
                                    </div>
                                </div>
                                <div class="customer-info">
                                    <h4 class="customer-name">@Model.ApplicationUser?.FirstName @Model.ApplicationUser?.LastName</h4>
                                    <div class="customer-details">
                                        <div class="detail-item">
                                            <i class="fas fa-envelope"></i>
                                            <span>@Model.ApplicationUser?.Email</span>
                                        </div>
                                        <div class="detail-item">
                                            <i class="fas fa-phone"></i>
                                            <span>@Model.ApplicationUser?.PhoneNumber</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Shipping Info Card -->
                    <div class="details-card shipping-card">
                        <div class="card-header">
                            <div class="header-icon">
                                <i class="fas fa-shipping-fast"></i>
                            </div>
                            <div class="header-text">
                                <h3 class="card-title">Giao hàng</h3>
                                <p class="card-subtitle">Thông tin địa chỉ nhận hàng</p>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="shipping-info">
                                <div class="address-section">
                                    <label class="info-label">
                                        <i class="fas fa-map-marker-alt me-2"></i>
                                        Địa chỉ giao hàng
                                    </label>
                                    <div class="address-content">
                                        @Model.ShippingAddress
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.Notes))
                                {
                                    <div class="notes-section">
                                        <label class="info-label">
                                            <i class="fas fa-sticky-note me-2"></i>
                                            Ghi chú
                                        </label>
                                        <div class="notes-content">
                                            @Model.Notes
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Actions Card -->
                    <div class="details-card actions-card">
                        <div class="card-header">
                            <div class="header-icon">
                                <i class="fas fa-cogs"></i>
                            </div>
                            <div class="header-text">
                                <h3 class="card-title">Quản lý đơn hàng</h3>
                                <p class="card-subtitle">Cập nhật trạng thái và thao tác</p>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="action-buttons">
                                <button class="action-btn btn-complete" onclick="updateStatus('Completed')">
                                    <div class="btn-icon">
                                        <i class="fas fa-check-circle"></i>
                                    </div>
                                    <div class="btn-content">
                                        <span class="btn-title">Hoàn thành</span>
                                        <span class="btn-subtitle">Đánh dấu đã giao hàng</span>
                                    </div>
                                </button>
                                
                                <button class="action-btn btn-processing" onclick="updateStatus('Processing')">
                                    <div class="btn-icon">
                                        <i class="fas fa-sync-alt"></i>
                                    </div>
                                    <div class="btn-content">
                                        <span class="btn-title">Đang xử lý</span>
                                        <span class="btn-subtitle">Đơn hàng đang được chuẩn bị</span>
                                    </div>
                                </button>
                                
                                <button class="action-btn btn-cancel" onclick="updateStatus('Cancelled')">
                                    <div class="btn-icon">
                                        <i class="fas fa-times-circle"></i>
                                    </div>
                                    <div class="btn-content">
                                        <span class="btn-title">Hủy đơn</span>
                                        <span class="btn-subtitle">Hủy bỏ đơn hàng này</span>
                                    </div>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section><!-- Enhanced Modern CSS for Order Details -->
<style>
    /* === HEADER STYLES === */
    .order-details-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        margin: -20px -20px 30px -20px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .header-content {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .order-icon {
        width: 70px;
        height: 70px;
        background: rgba(255,255,255,0.2);
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        backdrop-filter: blur(10px);
    }

    .order-title {
        font-size: 2.2rem;
        font-weight: 700;
        margin: 0 0 10px 0;
        color: white;
    }

    .order-meta {
        display: flex;
        gap: 20px;
        align-items: center;
        flex-wrap: wrap;
    }

    .order-date {
        background: rgba(255,255,255,0.15);
        padding: 8px 15px;
        border-radius: 25px;
        font-size: 0.9rem;
        backdrop-filter: blur(10px);
    }

    .order-status {
        padding: 8px 15px;
        border-radius: 25px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .status-processing {
        background: linear-gradient(135deg, #f093fb, #f5576c);
        color: white;
    }

    .header-actions {
        display: flex;
        gap: 12px;
    }

    .btn-print, .btn-back {
        background: rgba(255,255,255,0.15);
        border: 1px solid rgba(255,255,255,0.2);
        color: white;
        padding: 10px 20px;
        border-radius: 10px;
        font-weight: 500;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        text-decoration: none;
    }

    .btn-print:hover, .btn-back:hover {
        background: rgba(255,255,255,0.25);
        color: white;
        transform: translateY(-2px);
    }

    .order-details-content {
        background: #f8f9fc;
        min-height: 100vh;
        padding: 0;
    }

    /* === CARDS STYLES === */
    .order-details-section {
        padding: 0;
    }

    .details-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 8px 30px rgba(0,0,0,0.08);
        overflow: hidden;
        margin-bottom: 25px;
        transition: all 0.3s ease;
    }

    .details-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 15px 40px rgba(0,0,0,0.12);
    }

    .card-header {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 20px 25px;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .header-icon {
        width: 50px;
        height: 50px;
        background: rgba(255,255,255,0.2);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        margin-right: 15px;
    }

    .header-text {
        flex: 1;
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        margin: 0 0 5px 0;
    }

    .card-subtitle {
        font-size: 0.9rem;
        opacity: 0.8;
        margin: 0;
    }

    .header-badge {
        margin-left: auto;
    }

    .status-badge {
        background: rgba(255,255,255,0.2);
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .card-content {
        padding: 25px;
    }

    /* === SUMMARY GRID === */
    .summary-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
    }

    .summary-item {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 20px;
        background: #f8f9fc;
        border-radius: 15px;
        transition: all 0.3s ease;
    }

    .summary-item:hover {
        background: #f0f2f8;
        transform: translateY(-2px);
    }

    .summary-icon {
        width: 50px;
        height: 50px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 18px;
    }

    .bg-primary { background: linear-gradient(135deg, #667eea, #764ba2); }
    .bg-success { background: linear-gradient(135deg, #56ab2f, #a8e6cf); }
    .bg-info { background: linear-gradient(135deg, #4facfe, #00f2fe); }
    .bg-warning { background: linear-gradient(135deg, #f093fb, #f5576c); }

    .summary-info {
        display: flex;
        flex-direction: column;
    }

    .summary-label {
        font-size: 0.85rem;
        color: #718096;
        margin-bottom: 5px;
        font-weight: 500;
    }

    .summary-value {
        font-size: 1.1rem;
        font-weight: 700;
        color: #2d3748;
    }

    .summary-value.price {
        color: #38a169;
        font-size: 1.3rem;
    }

    /* === PRODUCTS LIST === */
    .products-list {
        max-height: 500px;
        overflow-y: auto;
    }

    .product-item {
        display: flex;
        align-items: center;
        padding: 20px 25px;
        border-bottom: 1px solid #e2e8f0;
        transition: all 0.3s ease;
    }

    .product-item:hover {
        background: #f8f9fc;
    }

    .product-item:last-child {
        border-bottom: none;
    }

    .product-image-container {
        margin-right: 20px;
    }

    .product-image {
        width: 70px;
        height: 70px;
        object-fit: cover;
        border-radius: 12px;
        border: 2px solid #e2e8f0;
    }

    .product-placeholder {
        width: 70px;
        height: 70px;
        background: #f8f9fc;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #cbd5e0;
        font-size: 24px;
    }

    .product-details {
        flex: 1;
    }

    .product-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2d3748;
        margin: 0 0 5px 0;
    }

    .product-category {
        color: #718096;
        font-size: 0.9rem;
        margin: 0 0 10px 0;
    }

    .product-meta {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 0.95rem;
    }

    .product-price {
        color: #667eea;
        font-weight: 600;
    }

    .product-separator {
        color: #cbd5e0;
        font-weight: 600;
    }

    .product-quantity {
        background: #667eea;
        color: white;
        padding: 4px 10px;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .product-total {
        text-align: right;
    }

    .total-amount {
        font-size: 1.2rem;
        font-weight: 700;
        color: #38a169;
    }

    .products-footer {
        padding: 20px 25px;
        border-top: 2px solid #e2e8f0;
        background: #f8f9fc;
    }

    .total-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .total-label {
        font-size: 1.2rem;
        font-weight: 600;
        color: #4a5568;
    }

    .total-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #38a169;
    }

    /* === CUSTOMER CARD === */
    .customer-profile {
        text-align: center;
    }

    .customer-avatar {
        margin-bottom: 20px;
    }

    .avatar-circle {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 28px;
        margin: 0 auto;
    }

    .customer-name {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2d3748;
        margin: 0 0 15px 0;
    }

    .customer-details {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .detail-item {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        padding: 10px;
        background: #f8f9fc;
        border-radius: 10px;
        font-size: 0.95rem;
        color: #4a5568;
    }

    .detail-item i {
        color: #667eea;
    }

    /* === SHIPPING CARD === */
    .shipping-info {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .info-label {
        font-size: 0.9rem;
        font-weight: 600;
        color: #4a5568;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
    }

    .address-content, .notes-content {
        background: #f8f9fc;
        padding: 15px;
        border-radius: 10px;
        color: #2d3748;
        border-left: 4px solid #667eea;
        line-height: 1.6;
    }

    /* === ACTION BUTTONS === */
    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .action-btn {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 18px 20px;
        border: none;
        border-radius: 12px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-align: left;
        cursor: pointer;
    }

    .btn-icon {
        width: 45px;
        height: 45px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 18px;
    }

    .btn-content {
        display: flex;
        flex-direction: column;
    }

    .btn-title {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 3px;
    }

    .btn-subtitle {
        font-size: 0.85rem;
        opacity: 0.8;
    }

    .btn-complete {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
        color: white;
    }

    .btn-complete .btn-icon {
        background: rgba(255,255,255,0.2);
    }

    .btn-processing {
        background: linear-gradient(135deg, #4facfe, #00f2fe);
        color: white;
    }

    .btn-processing .btn-icon {
        background: rgba(255,255,255,0.2);
    }

    .btn-cancel {
        background: linear-gradient(135deg, #f093fb, #f5576c);
        color: white;
    }

    .btn-cancel .btn-icon {
        background: rgba(255,255,255,0.2);
    }

    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }    /* === RESPONSIVE DESIGN === */
    @@media (max-width: 768px) {
        .order-title {
            font-size: 1.8rem;
        }
        
        .header-content {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }
        
        .header-actions {
            width: 100%;
            justify-content: center;
        }
        
        .summary-grid {
            grid-template-columns: 1fr;
        }
        
        .product-item {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }
        
        .product-details {
            text-align: center;
        }
        
        .order-meta {
            flex-direction: column;
            gap: 10px;
        }
    }

    /* === PRINT STYLES === */
    @@media print {
        .order-details-header,
        .header-actions,
        .actions-card {
            display: none !important;
        }
        
        .details-card {
            box-shadow: none !important;
            border: 1px solid #ddd !important;
            margin-bottom: 20px !important;
        }
        
        .card-header {
            background: #f8f9fc !important;
            color: #333 !important;
        }
    }
</style>

<!-- Enhanced JavaScript with Modern Features -->
<script>
    // Initialize page
    $(document).ready(function() {
        initializeAnimations();
        initializeTooltips();
        initializeScrollEffects();
        initializeKeyboardShortcuts();
    });

    // Initialize animations
    function initializeAnimations() {
        // Add AOS animation library if available
        if (typeof AOS !== 'undefined') {
            AOS.init({
                duration: 600,
                easing: 'ease-in-out',
                once: true
            });
        }

        // Add entrance animations
        $('.details-card').each(function(index) {
            $(this).css({
                'animation-delay': (index * 100) + 'ms',
                'animation': 'fadeInUp 0.8s ease-out forwards'
            });
        });

        // Add hover effects for product items
        $('.product-item').on('mouseenter', function() {
            $(this).find('.product-image').css('transform', 'scale(1.05)');
        }).on('mouseleave', function() {
            $(this).find('.product-image').css('transform', 'scale(1)');
        });
    }

    // Initialize tooltips
    function initializeTooltips() {
        $('[title]').tooltip({
            placement: 'top',
            trigger: 'hover',
            container: 'body'
        });

        // Add custom tooltips for action buttons
        $('.action-btn').tooltip({
            placement: 'left',
            trigger: 'hover'
        });
    }

    // Initialize scroll effects
    function initializeScrollEffects() {
        // Smooth scroll for internal links
        $('a[href^="#"]').on('click', function(e) {
            e.preventDefault();
            const target = $($(this).attr('href'));
            if (target.length) {
                $('html, body').animate({
                    scrollTop: target.offset().top - 100
                }, 800);
            }
        });

        // Add scroll spy for sections
        $(window).on('scroll', function() {
            const scrollPos = $(window).scrollTop();
            if (scrollPos > 100) {
                $('.order-details-header').addClass('scrolled');
            } else {
                $('.order-details-header').removeClass('scrolled');
            }
        });
    }

    // Initialize keyboard shortcuts
    function initializeKeyboardShortcuts() {
        $(document).keydown(function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.keyCode) {
                    case 80: // Ctrl+P - Print
                        e.preventDefault();
                        window.print();
                        break;
                    case 72: // Ctrl+H - Go back
                        e.preventDefault();
                        window.history.back();
                        break;
                }
            }
            
            // ESC key to go back
            if (e.keyCode === 27) {
                window.history.back();
            }
        });
    }

    // Update order status
    function updateStatus(status) {
        const statusMessages = {
            'Completed': 'hoàn thành',
            'Processing': 'đang xử lý',
            'Cancelled': 'hủy bỏ'
        };

        Swal.fire({
            title: 'Xác nhận cập nhật',
            text: `Bạn có chắc chắn muốn ${statusMessages[status]} đơn hàng này?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: getStatusColor(status),
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Hủy bỏ',
            customClass: {
                popup: 'swal-modern',
                confirmButton: 'swal-confirm-btn',
                cancelButton: 'swal-cancel-btn'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                performStatusUpdate(status);
            }
        });
    }

    // Perform status update
    function performStatusUpdate(status) {
        // Show loading state
        const loadingBtn = $(`.btn-${status.toLowerCase()}`);
        const originalHtml = loadingBtn.html();
        loadingBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Đang cập nhật...');
        loadingBtn.prop('disabled', true);

        $.ajax({
            url: '@Url.Action("UpdateStatus")',
            type: 'POST',
            data: { 
                orderId: @Model.Id, 
                status: status 
            },
            beforeSend: function() {
                showLoadingOverlay();
            },
            success: function(response) {
                hideLoadingOverlay();
                loadingBtn.html(originalHtml);
                loadingBtn.prop('disabled', false);

                if (response.success) {
                    showToast('success', response.message || 'Cập nhật trạng thái thành công!');
                    updateStatusUI(status);
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    showToast('error', response.message || 'Có lỗi xảy ra khi cập nhật trạng thái!');
                }
            },
            error: function(xhr, status, error) {
                hideLoadingOverlay();
                loadingBtn.html(originalHtml);
                loadingBtn.prop('disabled', false);
                showToast('error', 'Có lỗi xảy ra khi cập nhật trạng thái!');
                console.error('Update status error:', error);
            }
        });
    }

    // Update status UI
    function updateStatusUI(status) {
        const statusBadges = $('.status-badge');
        statusBadges.removeClass('status-processing status-completed status-cancelled');
        
        switch(status) {
            case 'Completed':
                statusBadges.addClass('status-completed');
                statusBadges.html('<i class="fas fa-check-circle"></i> Hoàn thành');
                break;
            case 'Processing':
                statusBadges.addClass('status-processing');
                statusBadges.html('<i class="fas fa-clock"></i> Đang xử lý');
                break;
            case 'Cancelled':
                statusBadges.addClass('status-cancelled');
                statusBadges.html('<i class="fas fa-times-circle"></i> Đã hủy');
                break;
        }
    }

    // Utility functions
    function getStatusColor(status) {
        switch(status) {
            case 'Completed': return '#28a745';
            case 'Processing': return '#17a2b8';
            case 'Cancelled': return '#dc3545';
            default: return '#6c757d';
        }
    }

    function showToast(type, message) {
        if (typeof toastr !== 'undefined') {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            toastr[type](message);
        } else {
            alert(message);
        }
    }

    function showLoadingOverlay() {
        $('body').append(`
            <div class="loading-overlay">
                <div class="loading-spinner">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">Đang cập nhật trạng thái...</p>
                </div>
            </div>
        `);
    }

    function hideLoadingOverlay() {
        $('.loading-overlay').remove();
    }

    // Print functionality
    function printOrder() {
        window.print();
    }

    // Export functionality
    function exportToPDF() {
        // TODO: Implement PDF export
        showToast('info', 'Tính năng xuất PDF đang được phát triển...');
    }

    // Real-time updates (if needed)
    function initializeRealTimeUpdates() {
        // TODO: Implement real-time status updates via WebSocket
        // setInterval(() => {
        //     checkOrderStatus();
        // }, 30000);
    }
</script>

<!-- Additional CSS for animations and effects -->
<style>
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    .loading-spinner {
        background: white;
        padding: 40px;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    }

    .loading-spinner p {
        margin: 0;
        color: #4a5568;
        font-weight: 500;
    }

    .swal-modern {
        border-radius: 15px !important;
    }

    .swal-confirm-btn, .swal-cancel-btn {
        border-radius: 8px !important;
        font-weight: 600 !important;
        padding: 10px 25px !important;
    }

    .order-details-header.scrolled {
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .product-image {
        transition: transform 0.3s ease;
    }

    .status-completed {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf) !important;
    }

    .status-cancelled {
        background: linear-gradient(135deg, #f093fb, #f5576c) !important;
    }

    /* Smooth scrollbar for products list */
    .products-list::-webkit-scrollbar {
        width: 6px;
    }

    .products-list::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .products-list::-webkit-scrollbar-thumb {
        background: #667eea;
        border-radius: 10px;
    }

    .products-list::-webkit-scrollbar-thumb:hover {
        background: #764ba2;
    }
</style>

